// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WTSuccess.Application.Context;

#nullable disable

namespace WTSuccess.Infrastructure.Migrations
{
    [DbContext(typeof(WTSuccessContext))]
    partial class WTSuccessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WTSuccess.Domain.Models.Chapter", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("CourseId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ExamId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ExamId");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Course", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("StudentId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Exam", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("ExamResult")
                        .HasColumnType("boolean");

                    b.Property<decimal>("StudentId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Question", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ExamId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Student", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Topic", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("ChapterId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Teory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Chapter", b =>
                {
                    b.HasOne("WTSuccess.Domain.Models.Course", null)
                        .WithMany("Catalogs")
                        .HasForeignKey("CourseId");

                    b.HasOne("WTSuccess.Domain.Models.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Course", b =>
                {
                    b.HasOne("WTSuccess.Domain.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Question", b =>
                {
                    b.HasOne("WTSuccess.Domain.Models.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Topic", b =>
                {
                    b.HasOne("WTSuccess.Domain.Models.Chapter", null)
                        .WithMany("Contents")
                        .HasForeignKey("ChapterId");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Chapter", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Course", b =>
                {
                    b.Navigation("Catalogs");
                });

            modelBuilder.Entity("WTSuccess.Domain.Models.Exam", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
